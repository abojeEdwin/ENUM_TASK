
openapi: 3.0.0
info:
  title: Talent Management API
  version: 1.0.0
  description: API for managing talent authentication and profiles.

servers:
  - url: http://localhost:8080
    description: Local Development Server

tags:
  - name: Authentication
    description: User authentication and account management
  - name: Talent Profile
    description: Management of talent profiles

paths:
  /v1/auth/signup:
    post:
      summary: Register a new talent account
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountReq'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountRes'
        '409':
          description: Email already in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/auth/verify-email:
    post:
      summary: Verify talent email with a token
      tags:
        - Authentication
      parameters:
        - in: query
          name: token
          schema:
            type: string
          required: true
          description: The verification token sent to the user's email.
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talent'
        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/auth/login:
    post:
      summary: Authenticate talent and get a JWT token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginTalentReq'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginTalentRes'
        '401':
          description: Invalid credentials or email not verified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many failed login attempts, account locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/auth/logout:
    post:
      summary: Invalidate user session (logout)
      tags:
        - Authentication
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: token
          schema:
            type: string
          required: true
          description: The JWT token to invalidate.
      responses:
        '200':
          description: Logout successful
        '401':
          description: Unauthorized or token already invalidated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/profile/talent:
    post:
      summary: Update talent profile information
      tags:
        - Talent Profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileResponse'
        '404':
          description: Talent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/profile/me:
    get:
      summary: Retrieve authenticated talent's profile
      tags:
        - Talent Profile
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: talentId
          schema:
            type: integer
            format: int64
          required: true
          description: The ID of the talent whose profile is to be retrieved.
      responses:
        '200':
          description: Talent profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewProfileResponse'
        '404':
          description: Talent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CreateAccountReq:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: SecurePassword123!
    CreateAccountRes:
      type: object
      properties:
        token:
          type: string
          description: JWT token for the newly created account.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        message:
          type: string
          example: User created successfully
    LoginTalentReq:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: SecurePassword123!
    LoginTalentRes:
      type: object
      properties:
        token:
          type: string
          description: JWT token for the authenticated user.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        message:
          type: string
          example: Login successful
    Talent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          format: email
          example: user@example.com
        status:
          $ref: '#/components/schemas/TalentStatus'
    TalentStatus:
      type: string
      enum:
        - PENDING_VERIFICATION
        - VERIFIED
    UpdateProfileRequest:
      type: object
      required:
        - talentId
      properties:
        talentId:
          type: integer
          format: int64
          example: 1
        transcript:
          type: string
          nullable: true
          example: "Graduated with honors from XYZ University."
        statementOfPurpose:
          type: string
          nullable: true
          example: "Seeking opportunities in software development."
    UpdateProfileResponse:
      type: object
      properties:
        message:
          type: string
          example: Profile updated successfully
        profileCompleteness:
          $ref: '#/components/schemas/ProfileCompleteness'
        missingFields:
          type: array
          items:
            type: string
          example: []
    ViewProfileResponse:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        completeness:
          $ref: '#/components/schemas/ProfileCompleteness'
        missingFields:
          type: array
          items:
            type: string
          example: ["transcript"]
        transcript:
          type: string
          nullable: true
          example: "Graduated with honors from XYZ University."
        statementOfPurpose:
          type: string
          nullable: true
          example: "Seeking opportunities in software development."
    ProfileCompleteness:
      type: string
      enum:
        - ZERO
        - FIFTY
        - HUNDRED
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2023-10-27T10:00:00Z"
        status:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: Invalid input provided
        path:
          type: string
          example: /v1/auth/signup
